name: Rada Mobile App CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mobile-app/**'
      - '.github/workflows/mobile-pipeline.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mobile-app/**'

jobs:
  test:
    name: Test Mobile App
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'mobile-app/package-lock.json'

      - name: Install Dependencies
        working-directory: ./mobile-app
        run: npm ci

      - name: Run Linting
        working-directory: ./mobile-app
        run: npm run lint

      - name: Run Unit Tests
        working-directory: ./mobile-app
        run: npm test -- --coverage

      - name: Upload Test Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./mobile-app/coverage/coverage-final.json

  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'mobile-app/package-lock.json'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Dependencies
        working-directory: ./mobile-app
        run: npm ci

      - name: Make Gradlew Executable
        working-directory: ./mobile-app/android
        run: chmod +x ./gradlew

      - name: Build Android Release
        working-directory: ./mobile-app/android
        run: |
          ./gradlew bundleRelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign Android Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: mobile-app/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload Android Release
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: mobile-app/android/app/build/outputs/bundle/release/app-release.aab

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'mobile-app/package-lock.json'

      - name: Install Dependencies
        working-directory: ./mobile-app
        run: |
          npm ci
          cd ios && pod install

      - name: Build iOS App
        working-directory: ./mobile-app/ios
        run: |
          xcodebuild -workspace Rada.xcworkspace \
            -scheme Rada \
            -configuration Release \
            -archivePath $RUNNER_TEMP/Rada.xcarchive \
            clean archive

      - name: Export iOS App
        working-directory: ./mobile-app/ios
        run: |
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/Rada.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $RUNNER_TEMP/build

      - name: Upload iOS Release
        uses: actions/upload-artifact@v3
        with:
          name: ios-release
          path: ${{ runner.temp }}/build/Rada.ipa

  deploy-staging:
    name: Deploy to App Stores (Staging)
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
      - name: Download Android Release
        uses: actions/download-artifact@v3
        with:
          name: android-release
          path: android-release

      - name: Download iOS Release
        uses: actions/download-artifact@v3
        with:
          name: ios-release
          path: ios-release

      - name: Upload to Play Store (Beta)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON_KEY }}
          packageName: com.rada.app
          releaseFiles: android-release/app-release.aab
          track: beta

      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: ios-release/Rada.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

  deploy-production:
    name: Deploy to App Stores (Production)
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://rada.co.ke

    steps:
      - name: Download Android Release
        uses: actions/download-artifact@v3
        with:
          name: android-release
          path: android-release

      - name: Download iOS Release
        uses: actions/download-artifact@v3
        with:
          name: ios-release
          path: ios-release

      - name: Upload to Play Store (Production)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON_KEY }}
          packageName: com.rada.app
          releaseFiles: android-release/app-release.aab
          track: production

      - name: Upload to App Store
        uses: apple-actions/upload-app-store-build@v1
        with:
          app-path: ios-release/Rada.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
