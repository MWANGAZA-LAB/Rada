apiVersion: v1
kind: Secret
metadata:
  name: rada-app-secrets
  namespace: ${ENVIRONMENT}
type: Opaque
stringData:
  JWT_SECRET: ${JWT_SECRET}
  SESSION_SECRET: ${SESSION_SECRET}
  ENCRYPTION_KEY: ${ENCRYPTION_KEY}
  
---
apiVersion: v1
kind: Secret
metadata:
  name: rada-db-secrets
  namespace: ${ENVIRONMENT}
type: Opaque
stringData:
  DB_PASSWORD: ${DB_PASSWORD}
  DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
  REDIS_PASSWORD: ${REDIS_PASSWORD}
  
---
apiVersion: v1
kind: Secret
metadata:
  name: rada-external-secrets
  namespace: ${ENVIRONMENT}
type: Opaque
stringData:
  MPESA_CONSUMER_KEY: ${MPESA_CONSUMER_KEY}
  MPESA_CONSUMER_SECRET: ${MPESA_CONSUMER_SECRET}
  LIGHTNING_NODE_MACAROON: ${LIGHTNING_NODE_MACAROON}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rada-app
  namespace: ${ENVIRONMENT}
  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rada-app-role
  namespace: ${ENVIRONMENT}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
  resourceNames: ["rada-app-secrets", "rada-db-secrets", "rada-external-secrets"]
  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rada-app-role-binding
  namespace: ${ENVIRONMENT}
subjects:
- kind: ServiceAccount
  name: rada-app
  namespace: ${ENVIRONMENT}
roleRef:
  kind: Role
  name: rada-app-role
  apiGroup: rbac.authorization.k8s.io
